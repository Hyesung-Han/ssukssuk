swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /user/delete/{id}:
    delete:
      tags:
        - "user"
      summary: "Delete purchase order by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteOrder"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the order that needs to be deleted"
          required: true
          type: "String"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"

  /user/myInfo/{id}:
    get:
      tags:
        - "user"
      summary: "get userinfo"
      description: "This can only be done by the logged in user."
      operationId: "selectUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: "id"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User_info"
      responses:
        default:
          description: "successful operation"

  /user/regi:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"

  /user/login:
    post:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User_login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  User:
    type: "object"
    properties:
      user_id:
        type: "string"
      user_pw:
        type: "string"
      user_name:
        type: "string"
      user_nickName:
        type: "string"
      user_email:
        type: "string"
      user_code:
        type: "string"
    xml:
      name: "User"

  User_login:
    type: "object"
    properties:
      user_id:
        type: "string"
      user_pw:
        type: "string"
    xml:
      name: "User_login"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
