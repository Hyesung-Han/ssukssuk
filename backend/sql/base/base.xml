<!-- /server/sql/base/base.xml -->

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="USER">  


  <update id = "AUTH.UPDATE.USERUPDATE">
      update user_t set
      user_nickName = #{nickName}
      where user_id = #{id}
  </update>

  <update id = "AUTH.UPDATE.USERPWUPDATE">
      update user_t set
      user_pw = #{new_pw}
      where user_id = #{id}
  </update>


  <select id="AUTH.SELECT.userInfo">
  	/* 사용자, 유저 정보 조회 */
    SELECT  
        *
    FROM user_T
    WHERE user_id = #{id}
    LIMIT 1
  </select>


  <delete id="AUTH.DELETE.USERDELETE">
    /* 사용자, 유저 정보 삭제 */
    Delete
    From user_T
    Where user_id = #{id}
      
  </delete>

  <insert id="AUTH.INSERT.userRegi">
  	/* 사용자, 유저 정보 삽입 */
    INSERT INTO user_T
    (
        user_id,
        user_pw,
        user_name,
        user_nickName,
        user_email,
        user_code
    )
    VALUES
    (
        #{id}, 
        #{pw}, 
        #{name},
        #{nickName},
        #{email},
        #{code}
    )
  </insert>

  <select id="AUTH.SELECT.userIdChk">
  	/*ID 중복검사*/
    SELECT  
        user_id
    FROM user_T
    WHERE user_id = #{user_id}
  </select>

  <select id="AUTH.SELECT.userNickChk">
  	/*닉네임 중복검사*/
    SELECT  
        user_nickName
    FROM user_T
    WHERE user_nickName = #{user_nickName}
  </select>

  <select id="AUTH.SELECT.userexist">
    /*로그인: 존재하는 회원인지 검사*/
    SELECT  
        user_id,
        user_pw,
        user_name,
        user_nickName,
        user_email,
        user_code
    FROM user_T
    WHERE user_id = #{id}
    LIMIT 1
  </select>

</mapper>